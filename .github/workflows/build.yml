# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: 🚀 Build NuGet Package

permissions:
  contents: write

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}\artifacts
  NUGET_SOURCE: https://api.nuget.org/v3/index.json

defaults:
  run:
    shell: pwsh

jobs:
  run_test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: 🟢 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # - name: 🧪 Run tests
      #   run: dotnet test --configuration Debug --filter "TestCategory=Static"
 
  changelog:
    needs: [ run_test ]
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    steps:
      - name: 🧱 Checkout code
        uses: actions/checkout@v3
        
      - name: 🧰 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: 🛠 Install github_changelog_generator
        run: gem install github_changelog_generator
      
      - name: 📝 Generate CHANGELOG.md
        run: |
          github_changelog_generator -u SteveFawcett -p BroadcastPluginSDK
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG.md"
          git push origin HEAD:${{ github.head_ref }}
        env:
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  create_nuget:
    runs-on: windows-latest
    needs: [ run_test ]
    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Required for MinVer to access full Git history

      - name: 🟢 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 📦 Restore dependencies
        run: dotnet restore

      - name: 📥 Install MinVer CLI
        run: dotnet tool install --global minver-cli
  
      - name: 🔧 Build with MinVer
        run: dotnet build --configuration Release /p:MinVerBuildMetadata=ci

      - name: 🧠 Compute Semantic Version
        id: minver
        run: |
          $env:PATH += ";$env:USERPROFILE\.dotnet\tools"
          $version = minver --tag-prefix v
          echo "MinVer version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT


      - name: 📦 Pack with MinVer
        run: |
          New-Item -ItemType Directory -Force -Path "${{ env.NuGetDirectory }}"
          dotnet pack --configuration Release `
            --output "${{ env.NuGetDirectory }}" `
            /p:MinVerBuildMetadata=ci `
            /p:PackageVersion=${{ steps.minver.outputs.version }}

      - name: 🎯 Show Version Summary
        run: |
          echo "::notice title=🎵 Semantic Version::${{ steps.minver.outputs.version }}"
          echo "::group::🔖 Version Details"
          echo "Computed Version: ${{ steps.minver.outputs.version }}"
          echo "::endgroup::"

      - name: 📂 Log packed files
        run: |
          echo "::group::📦 Packed NuGet Files"
          Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse
          echo "::endgroup::"

      - name: 📤 Upload NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg
