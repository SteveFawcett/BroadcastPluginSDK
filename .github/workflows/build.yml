# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: ðŸš€ Build NuGet Package

permissions:
  contents: write

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}\artifacts
  NUGET_SOURCE: https://api.nuget.org/v3/index.json

defaults:
  run:
    shell: pwsh

jobs:
  run_test:
    runs-on: windows-latest
    steps:
      - name: ðŸ§¾ Checkout
        uses: actions/checkout@v5

      - name: ðŸŸ¢ Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # - name: ðŸ§ª Run tests
      #   run: dotnet test --configuration Debug --filter "TestCategory=Static"

  create_nuget:
    runs-on: windows-latest
    needs: [ run_test ]
    steps:
      - name: ðŸ§¾ Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Required for MinVer to access full Git history

      - name: ðŸŸ¢ Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: ðŸ“¦ Restore dependencies
        run: dotnet restore

      - name: ðŸ”§ Build with MinVer
        run: dotnet build --configuration Release /p:MinVerBuildMetadata=ci

      - name: ðŸ§  Compute Semantic Version
        id: minver
        run: |
          $version = dotnet minver --tag-prefix v
          echo "MinVer version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: ðŸ“¦ Pack with MinVer
        run: |
          New-Item -ItemType Directory -Force -Path "${{ env.NuGetDirectory }}"
          dotnet pack --configuration Release `
            --output "${{ env.NuGetDirectory }}" `
            /p:MinVerBuildMetadata=ci `
            /p:PackageVersion=${{ steps.minver.outputs.version }}

      - name: ðŸŽ¯ Show Version Summary
        run: |
          echo "::group::ðŸ”– Semantic Version"
          echo "Computed Version: ${{ steps.minver.outputs.version }}"
          echo "::endgroup::"

      - name: ðŸ“‚ Log packed files
        run: Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse

      - name: ðŸ“¤ Upload NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

              --skip-duplicate
          }
