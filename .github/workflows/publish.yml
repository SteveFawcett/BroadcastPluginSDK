name: 🚀 Publish NuGet Package

permissions:
  contents: write # Needed to create GitHub releases

on:
  push:
    branches:
      - main # Or your default branch
      - master

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NUGET_SOURCE: https://api.nuget.org/v3/index.json

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: 🧱 Checkout code
        uses: actions/checkout@v3
        
      - name: 🧰 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: 🛠 Install github_changelog_generator
        run: gem install github_changelog_generator

      - name: 📝 Generate CHANGELOG.md
        run: |
          github_changelog_generator -u SteveFawcett -p BroadcastPluginSDK
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG.md"
          git push
        env:
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

          
  build-pack-release-publish:
    runs-on: windows-latest
    needs: [ changelog ]
    defaults:
      run:
        shell: pwsh

    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 📥 Install MinVer CLI
        run: dotnet tool install --global minver-cli

      - name: 🔍 Compute Semantic Version
        id: minver
        run: |
          $env:PATH += ";$env:USERPROFILE\.dotnet\tools"
          $version = minver --tag-prefix v --default-pre-release-phase ""
          echo "Computed version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: 🛠️ Build
        run: dotnet build --configuration Release /p:MinVerBuildMetadata=ci

      - name: 📦 Pack
        run: |
          mkdir -Force artifacts
          dotnet pack --configuration Release --output artifacts /p:MinVerBuildMetadata=ci

      - name: 📝 Extract Changelog for Release
        id: changelog
        run: |
          $version = "${{ steps.minver.outputs.version }}"
          $lines = Get-Content CHANGELOG.md
          $start = ($lines | Select-String "## \[$version\]").LineNumber
          $end = ($lines | Select-String "^## \[" | Where-Object { $_.LineNumber -gt $start } | Select-Object -First 1).LineNumber
          $length = if ($end) { $end - $start - 1 } else { $lines.Length - $start }
          $body = $lines[$start..($start + $length)] -join "`n"
          echo "body<<EOF" >> $env:GITHUB_OUTPUT
          echo "$body" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT

      - name: 📝 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.minver.outputs.version }}
          name: v${{ steps.minver.outputs.version }}
          body: ${{ steps.changelog.outputs.body }}
          prerelease: ${{ contains(steps.minver.outputs.version, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Push to NuGet
        run: |
          foreach ($file in Get-ChildItem "artifacts" -Filter *.nupkg) {
            dotnet nuget push $file.FullName `
              --api-key "${{ secrets.NUGET_API_KEY }}" `
              --source "${{ env.NUGET_SOURCE }}" `
              --skip-duplicate
          }
